{"ast":null,"code":"import { AUTHENTICATION } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\nconst signup = (formValues, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signup(formValues);\n    dispatch({\n      type: AUTHENTICATION,\n      data\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst login = (formValues, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.login(formValues);\n    dispatch({\n      type: AUTHENTICATION,\n      data\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { login, signup };","map":{"version":3,"sources":["C:/learnings/react/mernapp2021/INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING/client/src/actions/authentication.js"],"names":["AUTHENTICATION","api","signup","formValues","navigate","dispatch","data","type","error","console","log","login"],"mappings":"AAAA,SAASA,cAAT,QAA+B,0BAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;AAEA,MAAMC,MAAM,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AAC3D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACC,MAAJ,CAAWC,UAAX,CAAvB;AAEAE,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,cAAR;AAAwBM,MAAAA;AAAxB,KAAD,CAAR;AAEAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVD;;AAYA,MAAMG,KAAK,GAAG,CAACR,UAAD,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACU,KAAJ,CAAUR,UAAV,CAAvB;AAEAE,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,cAAR;AAAwBM,MAAAA;AAAxB,KAAD,CAAR;AAEAF,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVD;;AAYA,SAASG,KAAT,EAAgBT,MAAhB","sourcesContent":["import { AUTHENTICATION } from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nconst signup = (formValues, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signup(formValues);\r\n\r\n    dispatch({ type: AUTHENTICATION, data });\r\n\r\n    navigate(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst login = (formValues, navigate) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.login(formValues);\r\n\r\n    dispatch({ type: AUTHENTICATION, data });\r\n\r\n    navigate(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport { login, signup };\r\n"]},"metadata":{},"sourceType":"module"}