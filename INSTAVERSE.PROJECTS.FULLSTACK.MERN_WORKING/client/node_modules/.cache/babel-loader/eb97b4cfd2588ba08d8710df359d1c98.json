{"ast":null,"code":"var _jsxFileName = \"C:\\\\learnings\\\\react\\\\mernapp2021\\\\INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING\\\\client\\\\src\\\\components\\\\StoryForm\\\\StoryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Card, Form, Input, Typography, Button } from \"antd\";\nimport styles from \"./styles\";\nimport FileBase64 from \"react-file-base64\";\nimport { CloseOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { createStory, updateStory } from \"../../actions/stories\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst StoryForm = _ref => {\n  _s();\n\n  var _user$result;\n\n  let {\n    selectedId,\n    setSelectedId\n  } = _ref;\n  const [form] = Form.useForm();\n  const story = useSelector(state => selectedId ? state.stories.find(story => story._id === selectedId) : null);\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const username = user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.username;\n  useEffect(() => {\n    if (story) form.setFieldsValue(story);\n  }, [form, story]);\n\n  const onSubmit = formValues => {\n    console.log(formValues);\n    selectedId ? dispatch(updateStory(selectedId, { ...formValues,\n      username\n    })) : dispatch(createStory({ ...formValues,\n      username\n    }));\n    reset();\n  };\n\n  const reset = () => {\n    form.resetFields();\n    setSelectedId(null);\n  };\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.formCard,\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.formTitle,\n          children: \" Welcome to Instaverse!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \"Please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/authform\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this), \" or\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/authform\",\n          children: \"register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" for sharing instant moments or ideas.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: styles.formCard,\n    title: /*#__PURE__*/_jsxDEV(Title, {\n      level: 4,\n      style: styles.formTitle,\n      children: [selectedId ? \"Editing\" : \"Share\", \" a Story\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      },\n      layout: \"horizontal\",\n      size: \"middle\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"caption\",\n        label: \"Caption\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n          allowClear: true,\n          autoSize: {\n            minRows: 2,\n            maxRows: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"tags\",\n        label: \"Tags\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"image\",\n        label: \"Story Pic\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(FileBase64, {\n          type: \"file\",\n          multiple: false,\n          onDone: e => form.setFieldsValue({\n            image: e.base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 16,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          block: true,\n          htmlType: \"submit\",\n          icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this),\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !selectedId ? null : /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 16,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          block: true,\n          htmlType: \"button\",\n          onClick: reset,\n          icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this),\n          danger: true,\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StoryForm, \"6wAbpgyN3QnZwra8+R2LWk/ojeI=\", false, function () {\n  return [Form.useForm, useSelector, useDispatch];\n});\n\n_c = StoryForm;\nexport default StoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoryForm\");","map":{"version":3,"sources":["C:/learnings/react/mernapp2021/INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING/client/src/components/StoryForm/StoryForm.js"],"names":["React","useEffect","Card","Form","Input","Typography","Button","styles","FileBase64","CloseOutlined","SendOutlined","useDispatch","createStory","updateStory","useSelector","Link","Title","StoryForm","selectedId","setSelectedId","form","useForm","story","state","stories","find","_id","dispatch","user","JSON","parse","localStorage","getItem","username","result","setFieldsValue","onSubmit","formValues","console","log","reset","resetFields","formCard","formTitle","span","required","minRows","maxRows","e","image","base64","offset"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Card, Form, Input, Typography, Button } from \"antd\";\r\nimport styles from \"./styles\";\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { CloseOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createStory, updateStory } from \"../../actions/stories\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst StoryForm = ({ selectedId, setSelectedId }) => {\r\n  const [form] = Form.useForm();\r\n  const story = useSelector((state) =>\r\n    selectedId ? state.stories.find((story) => story._id === selectedId) : null\r\n  );\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const username = user?.result?.username;\r\n\r\n  useEffect(() => {\r\n    if (story) form.setFieldsValue(story);\r\n  }, [form, story]);\r\n\r\n  const onSubmit = (formValues) => {\r\n    console.log(formValues);\r\n    selectedId\r\n      ? dispatch(\r\n          updateStory(selectedId, {\r\n            ...formValues,\r\n            username,\r\n          })\r\n        )\r\n      : dispatch(createStory({ ...formValues, username }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    form.resetFields();\r\n    setSelectedId(null);\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <Card style={styles.formCard}>\r\n        <Title level={4}>\r\n          <span style={styles.formTitle}> Welcome to Instaverse!</span>\r\n          <br />\r\n          Please <Link to=\"/authform\">login</Link> or{\" \"}\r\n          <Link to=\"/authform\">register</Link> for sharing instant moments or\r\n          ideas.\r\n        </Title>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      style={styles.formCard}\r\n      title={\r\n        <Title level={4} style={styles.formTitle}>\r\n          {selectedId ? \"Editing\" : \"Share\"} a Story\r\n        </Title>\r\n      }\r\n    >\r\n      <Form\r\n        form={form}\r\n        labelCol={{ span: 6 }}\r\n        wrapperCol={{ span: 16 }}\r\n        layout=\"horizontal\"\r\n        size=\"middle\"\r\n        onFinish={onSubmit}\r\n      >\r\n        <Form.Item name=\"caption\" label=\"Caption\" rules={[{ required: true }]}>\r\n          <Input.TextArea allowClear autoSize={{ minRows: 2, maxRows: 6 }} />\r\n        </Form.Item>\r\n        <Form.Item name=\"tags\" label=\"Tags\">\r\n          <Input allowClear />\r\n        </Form.Item>\r\n        <Form.Item name=\"image\" label=\"Story Pic\" rules={[{ required: true }]}>\r\n          <FileBase64\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={(e) =>\r\n              form.setFieldsValue({\r\n                image: e.base64,\r\n              })\r\n            }\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            span: 16,\r\n            offset: 6,\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            htmlType=\"submit\"\r\n            icon={<SendOutlined />}\r\n          >\r\n            Share\r\n          </Button>\r\n        </Form.Item>\r\n        {!selectedId ? null : (\r\n          <Form.Item\r\n            wrapperCol={{\r\n              span: 16,\r\n              offset: 6,\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              block\r\n              htmlType=\"button\"\r\n              onClick={reset}\r\n              icon={<CloseOutlined />}\r\n              danger\r\n            >\r\n              Discard\r\n            </Button>\r\n          </Form.Item>\r\n        )}\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default StoryForm;\r\n"]},"metadata":{},"sourceType":"module"}