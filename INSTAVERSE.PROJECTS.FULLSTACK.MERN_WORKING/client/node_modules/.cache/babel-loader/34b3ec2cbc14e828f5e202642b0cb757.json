{"ast":null,"code":"var _jsxFileName = \"C:\\\\learnings\\\\react\\\\mernapp2021\\\\INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING\\\\client\\\\src\\\\components\\\\AuthForm\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport styles from \"./styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login, signup } from \"../../actions/authentication\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const switchMode = () => {\n    setIsLogin(prevIsLogin => !prevIsLogin);\n  };\n\n  const onSubmit = formValues => {\n    if (isLogin) {\n      dispatch(login(formValues, navigate));\n    } else dispatch(signup(formValues, navigate));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: styles.card,\n      title: /*#__PURE__*/_jsxDEV(Title, {\n        level: 4,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [isLogin ? \"Login to\" : \"Join\", \" Instaverse\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"authform\",\n        form: form,\n        size: \"large\",\n        wrapperCol: {\n          span: 20,\n          offset: 2\n        },\n        onFinish: onSubmit,\n        children: [isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"username\",\n          rules: [{\n            required: true,\n            message: \"Please enter your Username!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 30\n            }, this),\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            type: \"email\",\n            message: \"Please enter a valid email address\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, this),\n            placeholder: \"E-mail address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: \"Please enter your Password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this),\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), isLogin || /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"confirmPassword\",\n          rules: [{\n            required: true,\n            message: \"Please repeat your Password!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this),\n            type: \"password\",\n            placeholder: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: isLogin ? \"Login\" : \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              margin: \"0 10px 0 20px\"\n            },\n            children: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            onClick: switchMode,\n            children: isLogin ? \"register now!\" : \"have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"lBmAOHiy/kRopEqQFSKD9sNqW+s=\", false, function () {\n  return [Form.useForm, useNavigate, useDispatch];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/learnings/react/mernapp2021/INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING/client/src/components/AuthForm/AuthForm.js"],"names":["React","useState","Form","Input","Button","Card","Layout","Typography","UserOutlined","LockOutlined","MailOutlined","styles","useNavigate","login","signup","useDispatch","Title","AuthForm","isLogin","setIsLogin","form","useForm","navigate","dispatch","switchMode","prevIsLogin","onSubmit","formValues","container","card","textAlign","span","offset","required","message","type","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Card, Layout, Typography } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport styles from \"./styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { login, signup } from \"../../actions/authentication\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\nconst AuthForm = () => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const switchMode = () => {\r\n    setIsLogin((prevIsLogin) => !prevIsLogin);\r\n  };\r\n\r\n  const onSubmit = (formValues) => {\r\n    if (isLogin) {\r\n      dispatch(login(formValues, navigate));\r\n    } else dispatch(signup(formValues, navigate));\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <Card\r\n        style={styles.card}\r\n        title={\r\n          <Title level={4} style={{ textAlign: \"center\" }}>\r\n            {isLogin ? \"Login to\" : \"Join\"} Instaverse\r\n          </Title>\r\n        }\r\n      >\r\n        <Form\r\n          name=\"authform\"\r\n          form={form}\r\n          size=\"large\"\r\n          wrapperCol={{ span: 20, offset: 2 }}\r\n          onFinish={onSubmit}\r\n        >\r\n          {isLogin || (\r\n            <Form.Item\r\n              name=\"username\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please enter your Username!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n          )}\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                type: \"email\",\r\n                message: \"Please enter a valid email address\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input prefix={<MailOutlined />} placeholder=\"E-mail address\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter your Password!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              prefix={<LockOutlined />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Item>\r\n          {isLogin || (\r\n            <Form.Item\r\n              name=\"confirmPassword\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please repeat your Password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                prefix={<LockOutlined />}\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {isLogin ? \"Login\" : \"Join\"}\r\n            </Button>\r\n            <span style={{ margin: \"0 10px 0 20px\" }}>Or</span>\r\n            <Button type=\"link\" onClick={switchMode}>\r\n              {isLogin ? \"register now!\" : \"have an account?\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"]},"metadata":{},"sourceType":"module"}