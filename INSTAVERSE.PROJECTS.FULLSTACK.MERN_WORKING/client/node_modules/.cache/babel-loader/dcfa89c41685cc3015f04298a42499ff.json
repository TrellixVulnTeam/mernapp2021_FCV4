{"ast":null,"code":"import { FETCH_ALL_STORIES, CREATE_STORY, UPDATE_STORY, DELETE_STORY } from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\nconst getStories = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchStories();\n    dispatch({\n      type: FETCH_ALL_STORIES,\n      payload: data\n    });\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n\nconst createStory = story => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createStory(story);\n    dispatch({\n      type: CREATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateStory = (id, story) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateStory(id, story);\n    dispatch({\n      type: UPDATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst deleteStory = id => async dispatch => {\n  try {\n    await api.deleteStory(id);\n    dispatch({\n      type: DELETE_STORY,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst likeStory = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeStory(id);\n    dispatch({\n      type: UPDATE_STORY,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { getStories, createStory, updateStory, deleteStory, likeStory };","map":{"version":3,"sources":["C:/learnings/react/mernapp2021/INSTAVERSE.PROJECTS.FULLSTACK.MERN_WORKING/client/src/actions/stories.js"],"names":["FETCH_ALL_STORIES","CREATE_STORY","UPDATE_STORY","DELETE_STORY","api","getStories","dispatch","data","fetchStories","type","payload","err","console","log","message","createStory","story","error","updateStory","id","deleteStory","likeStory"],"mappings":"AAAA,SACEA,iBADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,0BALP;AAMA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,YAAJ,EAAvB;AAEAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,iBAAR;AAA2BU,MAAAA,OAAO,EAAEH;AAApC,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;AACF,CARD;;AAUA,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAOV,QAAP,IAAoB;AACjD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,WAAJ,CAAgBC,KAAhB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,YAAR;AAAsBS,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOU,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,CARD;;AAUA,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKH,KAAL,KAAe,MAAOV,QAAP,IAAoB;AACrD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACc,WAAJ,CAAgBC,EAAhB,EAAoBH,KAApB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,YAAR;AAAsBQ,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOU,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACH,OAAlB;AACD;AACF,CARD;;AASA,MAAMM,WAAW,GAAID,EAAD,IAAQ,MAAOb,QAAP,IAAoB;AAC9C,MAAI;AACF,UAAMF,GAAG,CAACgB,WAAJ,CAAgBD,EAAhB,CAAN;AAEAb,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,YAAR;AAAsBO,MAAAA,OAAO,EAAES;AAA/B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOF,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,CARD;;AASA,MAAMI,SAAS,GAAIF,EAAD,IAAQ,MAAOb,QAAP,IAAoB;AAC5C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACiB,SAAJ,CAAcF,EAAd,CAAvB;AAEAb,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,YAAR;AAAsBQ,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAR;AACD,GAJD,CAIE,OAAOU,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;AACF,CARD;;AASA,SAASZ,UAAT,EAAqBU,WAArB,EAAkCG,WAAlC,EAA+CE,WAA/C,EAA4DC,SAA5D","sourcesContent":["import {\r\n  FETCH_ALL_STORIES,\r\n  CREATE_STORY,\r\n  UPDATE_STORY,\r\n  DELETE_STORY,\r\n} from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nconst getStories = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchStories();\r\n\r\n    dispatch({ type: FETCH_ALL_STORIES, payload: data });\r\n  } catch (err) {\r\n    console.log(err.message);\r\n  }\r\n};\r\n\r\nconst createStory = (story) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createStory(story);\r\n\r\n    dispatch({ type: CREATE_STORY, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst updateStory = (id, story) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updateStory(id, story);\r\n\r\n    dispatch({ type: UPDATE_STORY, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\nconst deleteStory = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deleteStory(id);\r\n\r\n    dispatch({ type: DELETE_STORY, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nconst likeStory = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.likeStory(id);\r\n\r\n    dispatch({ type: UPDATE_STORY, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport { getStories, createStory, updateStory, deleteStory, likeStory };\r\n"]},"metadata":{},"sourceType":"module"}